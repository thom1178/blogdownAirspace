<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blogs on Jamel M. Thomas</title>
    <link>/blog/</link>
    <description>Recent content in Blogs on Jamel M. Thomas</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    
	<atom:link href="/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Dashboards with Flexdashboard</title>
      <link>/blog/flex-dashboards-blog/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/blog/flex-dashboards-blog/</guid>
      <description>Flex Dashboards: Everyone knows high-level languages are wonderful. The issues of yester-year are long gone; we no longer have to build dashboards from scratch. Being able to query data, and display directly through R is here, and I don’t see it going anywhere anytime soon.
Flexdashboard is an open source package in R that allows users to display dashboards directly in browser. It also has publishing support through RStudio. Assuming you have moderate traffic (like me), it’s perfect!</description>
    </item>
    
    <item>
      <title>Plotly for College Analysis</title>
      <link>/blog/plotly-text-analysis/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/blog/plotly-text-analysis/</guid>
      <description>Plotly for College Analysis Community colleges for many is a stepping stone to a larger dream of four year university. However, many of the risk factors that prevent students from succeeding in school are highly prevelant in the student body of 2-year institutions.
In this post, we explore open college data. This dataset includes the name of the college, the aggregated number of people who passed a particular subject by transfer level and race.</description>
    </item>
    
    <item>
      <title>Predicting Churn</title>
      <link>/blog/exploring-telecom-churn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/blog/exploring-telecom-churn/</guid>
      <description>Telecom Churn Although there are many examples, churn prediction is one of the classical applications of Data Science that works. Churn prediction gives businessmen and bussinesswomen the power to catch those consumers who are likely to leave the company. They can in turn take appropriate measure to keep their business. In this project, we consider a dataset of 7,043 observations. The goal here is to predict, with a fair amount of accuracy, which observations are likely to churn.</description>
    </item>
    
    <item>
      <title>Python in R Markdown?</title>
      <link>/blog/python-in-rstudio/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/blog/python-in-rstudio/</guid>
      <description>Python in R Markdown R Markdown supports Python integration with the package reticulate.The nice thing about R Markdown is that it is the first scripting language I have ever learned. Therefore, I am almost too comfortable with it. It is my go to for most of my project because it’s so easy to get a proof of concept with new ideas. The downfall of it - until now - is that I was unaware that we could use PYTHON IN R MARKDOWN!</description>
    </item>
    
    <item>
      <title>SQL, Databases &amp; R</title>
      <link>/blog/sql-and-r/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/blog/sql-and-r/</guid>
      <description>SQL: SQL is a querying language used to manipulate databases. On its own, it is a powerful tool in any Data Scientist’s toolbox. When you pair SQL with R (or Python), you have indespensible foundations to conduct even the basic analytics. This is not so much a lesson on SQL, but a lesson on connecting SQL with R via various packages. Moreover, we will use the packages dbplyr and dplyr to manipulate the datasets in a later blog.</description>
    </item>
    
    <item>
      <title>Where have I been?</title>
      <link>/blog/where-have-i-been/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>/blog/where-have-i-been/</guid>
      <description>Where Am I from? I began this blog in the summer of 2018, mostly because I needed a place to put all of the things I do for fun. What better way than to build your own website and put all that stuff there? I have come across this beautiful post from the D3js website. It creates a plot of where the author has been.</description>
    </item>
    
  </channel>
</rss>